API：别人做好的类 我们直接调用就好！
这次的学习通过String和ArrayList类的学习来入门
String 类定义的变量可以用于存储字符串。java给了很多string的功能
学习内容：1.如何创建String类对象 2.String的内存原理 3.String类提供的那些API 4.用String类解决响应问题
String类提供的常用功能：1.字符串内容比较 2.遍历 3.截取 4.替换 5.分割

ArrayList类代表的是集合类，集合是一个容器类，ArrayList与数组类似 但不同的是集合的大小是不固定的！
一般都是通过ArrayList类的对象得到一个集合容器。
学习内容：1.如何通过ArrayList创建对象 2.ArrayList的常用功能 添加、获取、删除、修改等 3.ArrayList如何存储自定义对象 4.用ArrayList解决实际问题

下面是String类的具体学习
String类代表的是一个字符串 java中的所有双引号变量都是此类的对象
String类创建后的对象不能被更改 ，但是string变量可以变化string变量的值是对象的地址 可以改变的 这就是string变量可以进行+操作的原因。
创建字符串对象的2种方式：1.直接用双引号定义： String str="",2.通过String类的构造器定义对象。使用“”直接赋值时 字符串放在字符串常量池中。
常见的构造器有：
  1.public String（）{}//创建一个空白字符串
  2.public String（String original）{}//根据传入的字符串定义  感觉脱裤子放屁 不如直接双引号定义
  3.public String (char[] c){}//根据字符数组创建字符串
  4.public String（byte[]c）{}//根据字节数组创建
String类常见面试题：
 1. String s2=new String("abc")//这句代码实际上创建了两个变量 一个在字符串常量中一个在堆内存中。
 2.String s1="abc";String s2="ab";s3=s2+"c";sout(s1==s3)--------->输出false 因为只要不是直接用双引号用变量参与运算 会放入堆内存
 
 String s1="abc"; String s2="a"+"b"+"c";sout(s1==s2)--------->true  java存在编译优化机制。
 
 String类的常用API
 1.equals（）：用于对比两个String对象 只关心内容是不是一样。
 2.equalsIgnoreCase():忽略大小写的比较！
 3.public int length()//返回字符串的长度
 4.public char charAt(int i)//返回字符串在索引i处的字符
 5.public char[] toCharArray()://返回字符串元素组成的数组
 6.public String subString(int beginIndex,int endIndex)//返回一个子字符串从 beginindex开始到endindex结束，是一个左闭右开区间。
 7.public String replace(CharSequence target,CharSequence replacement)//将target替换为replacement
 8.public String [] split(String regex) //按照regex正则切分
 9.public boolean contains(charSequence s)//看是否包含这个子字符串
 10.public boolean startswith(string prefix)
 11.public boolean endswith(string prefix)
 下面是一些String 案例：
 案例1：用String类开发验证码功能
 需求：随机产生一个五位数的验证码，每位可能是数字、大写字母（65）、小写字母（97）
 public class StringAnli {
    public static void main(String[] args) {
        //1.generate a yanzm with length of five,can be number,a-z,A-Z;
        Random d=new Random();
        String res="";
        String datas="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
        //上面是可能会出现的所有字符 下面搞一个五个循环 然后随机抽取即可
        for (int i = 0; i < 5; i++) {
            int t=d.nextInt(62);
            res+=datas.charAt(t);
        }
        System.out.println(res);
    }
}
案例2.模拟登陆



