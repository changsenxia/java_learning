选择排序思想：
  每轮选择当前位置与后面较小 的值与该位置交换！
实现快排代码：
        for (int i=0;i<arr.length-1;i++){
            for(int j=i;j<arr.length;j++){
                if(arr[j]<=arr[i]){
                    int t=arr[j];
                    arr[j]=arr[i];
                    arr[i]=t;
                }
            }
        }
快排的实现思想：
  两轮迭代，第一轮遍历控制选择几轮 第二个循环控制对比！ 实现思想为 从第一个开始一次拿后面的跟第一个比 比完第一个为最小的 然后到第二位！依次下去。
二分查找：
  二分查找的终结判断条件为（left<=right）
  代码实现：
   public static int binarysea(int[] arr,int target){
        int l=0;
        int r=arr.length-1;
        while(l<=r){
           int mid=(l+r)/2;
           if (arr[mid]<target){
               l=mid+1;
           }
           else if (arr[mid]>target){
               r=mid-1;
           }
           else {
               return mid;
           }
        }
        return -1;
    }
    
lambda表达式：
  是从jdk8开始的，作用是用来简化匿名内部类的代码写法
  Lambda简化格式
  （匿名内部类被重写的代码的形参列表）->{被重写的方法体}
