选择排序思想：
  每轮选择当前位置与后面较小 的值与该位置交换！
实现快排代码：
        for (int i=0;i<arr.length-1;i++){
            for(int j=i;j<arr.length;j++){
                if(arr[j]<=arr[i]){
                    int t=arr[j];
                    arr[j]=arr[i];
                    arr[i]=t;
                }
            }
        }
快排的实现思想：
  两轮迭代，第一轮遍历控制选择几轮 第二个循环控制对比！ 实现思想为 从第一个开始一次拿后面的跟第一个比 比完第一个为最小的 然后到第二位！依次下去。
二分查找：
  二分查找的终结判断条件为（left<=right）
  代码实现：
   public static int binarysea(int[] arr,int target){
        int l=0;
        int r=arr.length-1;
        while(l<=r){
           int mid=(l+r)/2;
           if (arr[mid]<target){
               l=mid+1;
           }
           else if (arr[mid]>target){
               r=mid-1;
           }
           else {
               return mid;
           }
        }
        return -1;
    }
    
lambda表达式：
  是从jdk8开始的，作用是用来简化匿名内部类的代码写法
  Lambda简化格式
  （匿名内部类被重写的代码的形参列表）->{被重写的方法体}
  lambda仅能简化函数式接口匿名内部类的写法形式  只能是接口的用匿名内部类去表示，
  使用lambda在java中 首先只能是接口！ 接口中只能有一个抽象方法。
  lambda 表达式的省略规则：
  1.形参列表参数类型可以省略
  2.如果只有一个参数，括号都可以省略！
  3.如果方法体只有一个语句 可以省略大括号以及分号！
  4.如果只有一个语句 代码是return 必须省略return不写 同时分号不写
